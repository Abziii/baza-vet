// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using baza_vet.Data;

#nullable disable

namespace baza_vet.Migrations
{
    [DbContext(typeof(VetClinicContext))]
    partial class VetClinicContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("AnimalDoctors", b =>
                {
                    b.Property<int>("doctorsId")
                        .HasColumnType("int");

                    b.Property<int>("pacjentsId")
                        .HasColumnType("int");

                    b.HasKey("doctorsId", "pacjentsId");

                    b.HasIndex("pacjentsId");

                    b.ToTable("animal_doctors", (string)null);
                });

            modelBuilder.Entity("baza_vet.Modele.Animal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Birth_Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Breed")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Owner_Name")
                        .HasColumnType("longtext");

                    b.Property<string>("Species")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Animals");
                });

            modelBuilder.Entity("baza_vet.Modele.Appointments", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Animal_Id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Appointment_Date")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Doctor_Id")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("Animal_Id");

                    b.HasIndex("Doctor_Id");

                    b.ToTable("Appointments");
                });

            modelBuilder.Entity("baza_vet.Modele.Doctors", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("First_Name")
                        .HasColumnType("longtext");

                    b.Property<string>("Last_Name")
                        .HasColumnType("longtext");

                    b.Property<string>("Password_Hash")
                        .HasColumnType("longtext");

                    b.Property<string>("Specialization")
                        .HasColumnType("longtext");

                    b.Property<string>("Username")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Doctors");
                });

            modelBuilder.Entity("baza_vet.Modele.Vaccinations", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Animal_Id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Date_Given")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Vaccine_Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("Animal_Id");

                    b.ToTable("Vaccinations");
                });

            modelBuilder.Entity("AnimalDoctors", b =>
                {
                    b.HasOne("baza_vet.Modele.Doctors", null)
                        .WithMany()
                        .HasForeignKey("doctorsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("baza_vet.Modele.Animal", null)
                        .WithMany()
                        .HasForeignKey("pacjentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("baza_vet.Modele.Appointments", b =>
                {
                    b.HasOne("baza_vet.Modele.Animal", "animal")
                        .WithMany("appointments")
                        .HasForeignKey("Animal_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("baza_vet.Modele.Doctors", "doctor")
                        .WithMany()
                        .HasForeignKey("Doctor_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("animal");

                    b.Navigation("doctor");
                });

            modelBuilder.Entity("baza_vet.Modele.Vaccinations", b =>
                {
                    b.HasOne("baza_vet.Modele.Animal", "animal")
                        .WithMany("vaccinations")
                        .HasForeignKey("Animal_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("animal");
                });

            modelBuilder.Entity("baza_vet.Modele.Animal", b =>
                {
                    b.Navigation("appointments");

                    b.Navigation("vaccinations");
                });
#pragma warning restore 612, 618
        }
    }
}
